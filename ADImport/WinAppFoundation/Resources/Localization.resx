<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="iisexpress.deploy" xml:space="preserve">
    <value>Deploying site '{0}'.</value>
  </data>
  <data name="iisexpress.deploymentfaild" xml:space="preserve">
    <value>Error occurred when deploying site '{0}'.</value>
  </data>
  <data name="iisexpress.deploymentsucceeded" xml:space="preserve">
    <value>Site '{0}' was successfully deployed.</value>
  </data>
  <data name="iisexpress.errorremovingfromconfig" xml:space="preserve">
    <value>Exception occurred when removing web project "{0}" from applicationhost.config.</value>
  </data>
  <data name="iisexpress.physicalpathnull" xml:space="preserve">
    <value>Physical path of web project "{0}" is null.</value>
  </data>
  <data name="iisexpress.removedfromconfig" xml:space="preserve">
    <value>Web project "{0}" has been removed from applicationhost.config.</value>
  </data>
  <data name="iisexpress.removingfromconfig" xml:space="preserve">
    <value>Web project "{0}" is being removed from applicationhost.config.</value>
  </data>
  <data name="iisexpress.stoppingsite" xml:space="preserve">
    <value>Attempting to stop site at '{0}'.</value>
  </data>
  <data name="iisexpress.stoppingsitefailed" xml:space="preserve">
    <value>Error occurred when stopping site '{0}'.</value>
  </data>
  <data name="iisexpress.stoppingsitesucceeded" xml:space="preserve">
    <value>Site at '{0}' was successfully stopped.</value>
  </data>
  <data name="iisexpress.stoppingstopped" xml:space="preserve">
    <value>Site at '{0}' has already been stopped.</value>
  </data>
  <data name="iismanager.failedtogetpools" xml:space="preserve">
    <value>Failed to retrive application pools from IIS configuration.</value>
  </data>
  <data name="iismanager.failedtogetsites" xml:space="preserve">
    <value>Failed to retrieve sites from IIS configuration.</value>
  </data>
  <data name="iismanager.iisdirectoryfailed" xml:space="preserve">
    <value>Failed to retrieve IIS directory.</value>
  </data>
  <data name="iismanager.servermanagerfailed" xml:space="preserve">
    <value>Could not create server manager for IIS manipulation.</value>
  </data>
  <data name="iismanager.websitevalidationfailed" xml:space="preserve">
    <value>Website '{0}' ({1}) is not valid.</value>
  </data>
  <data name="localdb.assignsysadmintouser" xml:space="preserve">
    <value>Assigning SYSADMIN role to user "{0}".</value>
  </data>
  <data name="localdb.autostopdisablefailed" xml:space="preserve">
    <value>Failed to reconfigure LocalDB instance. After a while being idle it will stop.</value>
  </data>
  <data name="localdb.autostopdisablesuccess" xml:space="preserve">
    <value>LocalDB instance successfully reconfigured so it does not stop when idle.</value>
  </data>
  <data name="localdb.autostopdisabling" xml:space="preserve">
    <value>Ensuring LocalDB instance does not stop when idle.</value>
  </data>
  <data name="localdb.closingconnection" xml:space="preserve">
    <value>Closing connection to LocalDB server instance.</value>
  </data>
  <data name="localdb.closingconnectionfailed" xml:space="preserve">
    <value>Closing connection to LocalDB server instance failed.</value>
  </data>
  <data name="localdb.connectionclosed" xml:space="preserve">
    <value>Connection to LocalDB server instance closed.</value>
  </data>
  <data name="localdb.created" xml:space="preserve">
    <value>LocalDB instance "{0}" has been created.</value>
  </data>
  <data name="localdb.createfailed" xml:space="preserve">
    <value>LocalDB instance "{0}" was not created. Executable produced an empty output or instance was not detected. Output : {1}</value>
  </data>
  <data name="localdb.createfailedexception" xml:space="preserve">
    <value>Error occurred when creating LocalDB instance "{0}".</value>
  </data>
  <data name="localdb.creating" xml:space="preserve">
    <value>Creating LocalDB instance "{0}".</value>
  </data>
  <data name="localdb.creatinguser" xml:space="preserve">
    <value>Creating user "{0}".</value>
  </data>
  <data name="localdb.creatinguserfailed" xml:space="preserve">
    <value>Error occurred when creating user "{0}".</value>
  </data>
  <data name="localdb.getinginfofailed" xml:space="preserve">
    <value>Exception occurred when getting info about instances.</value>
  </data>
  <data name="localdb.notrunningafterstart" xml:space="preserve">
    <value>Starting LocalDB instance "{0}" failed. Instance is not running after start finished. Output : {1}</value>
  </data>
  <data name="localdb.presentafterremoval" xml:space="preserve">
    <value>Removal of LocalDB instance "{0}" failed. Instance is present after removal. Output : {1}</value>
  </data>
  <data name="localdb.removalfailed" xml:space="preserve">
    <value>Error occurred when removing LocalDB instance "{0}".</value>
  </data>
  <data name="localdb.removed" xml:space="preserve">
    <value>LocalDB instance "{0}" has been removed.</value>
  </data>
  <data name="localdb.removing" xml:space="preserve">
    <value>Removing LocalDB instance "{0}".</value>
  </data>
  <data name="localdb.runningafterstop" xml:space="preserve">
    <value>Stopping LocalDB instance "{0}" failed. Instance is running after stop finished. Output : {1}</value>
  </data>
  <data name="localdb.shared" xml:space="preserve">
    <value>LocalDB instance "{0}" has been shared. Shared name is "{1}".</value>
  </data>
  <data name="localdb.sharing" xml:space="preserve">
    <value>Sharing LocalDB instance "{0}". Shared name will be "{1}".</value>
  </data>
  <data name="localdb.sharingfailed" xml:space="preserve">
    <value>LocalDB instance "{0}" was not shared. Shared instance "{1}" was not detected. Output : {2}</value>
  </data>
  <data name="localdb.sharingfailedexception" xml:space="preserve">
    <value>Error occurred when sharing LocalDB instance "{0}" with "{1}".</value>
  </data>
  <data name="localdb.started" xml:space="preserve">
    <value>LocalDB instance "{0}" has been started.</value>
  </data>
  <data name="localdb.starting" xml:space="preserve">
    <value>Starting LocalDB instance "{0}".</value>
  </data>
  <data name="localdb.startingfailed" xml:space="preserve">
    <value>Error occurred when starting LocalDB instance "{0}".</value>
  </data>
  <data name="localdb.stopingbeforeremoval" xml:space="preserve">
    <value>Stopping LocalDB instance "{0}" before removal.</value>
  </data>
  <data name="localdb.stopped" xml:space="preserve">
    <value>LocalDB instance "{0}" has been stopped.</value>
  </data>
  <data name="localdb.stopping" xml:space="preserve">
    <value>Stopping LocalDB instance "{0}".</value>
  </data>
  <data name="localdb.stoppingfailed" xml:space="preserve">
    <value>Error occurred when stopping LocalDB instance "{0}".</value>
  </data>
  <data name="localdb.unshared" xml:space="preserve">
    <value>LocalDB instance "{1}" has been unshared from "{0}".</value>
  </data>
  <data name="localdb.unsharing" xml:space="preserve">
    <value>Unsharing LocalDB instance "{1}" from "{0}".</value>
  </data>
  <data name="localdb.unsharingfailed" xml:space="preserve">
    <value>LocalDB instance "{1}" was not unshared from "{0}". Shared instance "{1}" is still being detected. Output : {2}</value>
  </data>
  <data name="localdb.unsharingfailedexception" xml:space="preserve">
    <value>Error occurred when unsharing LocalDB instance "{1}" from instance "{0}".</value>
  </data>
  <data name="path.containsinvalidchars" xml:space="preserve">
    <value>Path contains invalid characters.</value>
  </data>
  <data name="path.deniedaccess" xml:space="preserve">
    <value>Access to selected folder has been denied.</value>
  </data>
  <data name="path.directorynotempty" xml:space="preserve">
    <value>Selected folder is not empty.</value>
  </data>
  <data name="path.invalidcolon" xml:space="preserve">
    <value>Colon in the path must be part of volume identifier.</value>
  </data>
  <data name="path.isnotvalid" xml:space="preserve">
    <value>Path '{0}' is not valid. ({1})</value>
  </data>
  <data name="path.istoolong" xml:space="preserve">
    <value>Path is too long.</value>
  </data>
  <data name="path.mustnotbeempty" xml:space="preserve">
    <value>Path must not be empty.</value>
  </data>
  <data name="path.pathdoesnotexist" xml:space="preserve">
    <value>Path does not exist.</value>
  </data>
  <data name="path.pathisrelativepath" xml:space="preserve">
    <value>Relative path is not allowed.</value>
  </data>
  <data name="process.colsingmainwindowsfailed" xml:space="preserve">
    <value>Exception occurred when closing main window of process with ID "{0}".</value>
  </data>
  <data name="process.gettingmainmodulefailed" xml:space="preserve">
    <value>Exception occurred when getting main module of process "{0}".</value>
  </data>
  <data name="process.started" xml:space="preserve">
    <value>Process with ID "{0}" has been started.</value>
  </data>
  <data name="process.starting" xml:space="preserve">
    <value>Process with ID "{0}" is being started.</value>
  </data>
  <data name="process.startingfailed" xml:space="preserve">
    <value>Exception occurred when starting process with ID "{0}".</value>
  </data>
  <data name="process.stopped" xml:space="preserve">
    <value>Process with ID "{0}" has been stopped.</value>
  </data>
  <data name="process.stopping" xml:space="preserve">
    <value>Process with ID "{0}" is being stopped.</value>
  </data>
  <data name="process.stoppingfailed" xml:space="preserve">
    <value>Exception occurred when stopping process with ID "{0}".</value>
  </data>
  <data name="service.started" xml:space="preserve">
    <value>Service "{0}" has been started.</value>
  </data>
  <data name="service.starting" xml:space="preserve">
    <value>Service "{0}" is being started.</value>
  </data>
  <data name="service.startingfailed" xml:space="preserve">
    <value>Exception occurred when starting service "{0}".</value>
  </data>
  <data name="service.stopped" xml:space="preserve">
    <value>Service "{0}" has been stopped.</value>
  </data>
  <data name="service.stopping" xml:space="preserve">
    <value>Service "{0}" is being stopped.</value>
  </data>
  <data name="service.stoppingfailed" xml:space="preserve">
    <value>Exception occurred when stopping service "{0}".</value>
  </data>
  <data name="service.stoppingreturnedwrongexitcode" xml:space="preserve">
    <value>Service control returned exit code "{1}" when stopping service "{0}".</value>
  </data>
  <data name="service.uninstalled" xml:space="preserve">
    <value>Service "{0}" has been uninstalled.</value>
  </data>
  <data name="service.uninstalling" xml:space="preserve">
    <value>Service "{0}" is being uninstalled.</value>
  </data>
  <data name="service.uninstallingfailed" xml:space="preserve">
    <value>Exception occurred when uninstalling service "{0}".</value>
  </data>
  <data name="service.uninstallreturnedwrongexitcode" xml:space="preserve">
    <value>Service control returned exit code "{1}" when uninstalling service "{0}".</value>
  </data>
</root>